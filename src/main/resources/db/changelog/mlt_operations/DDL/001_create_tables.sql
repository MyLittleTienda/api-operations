--liquibase formatted sql
--changeset RustyCrazyPunky:create-tables
CREATE TABLE IF NOT EXISTS OPERATION_TYPE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPTION VARCHAR(255) NOT NULL
);

INSERT INTO OPERATION_TYPE (
    DESCRIPTION
) VALUES (
    'sale'
);

INSERT INTO OPERATION_TYPE (
    DESCRIPTION
) VALUES(
    'purchase'
);

INSERT INTO OPERATION_TYPE (
    DESCRIPTION
) VALUES(
    'refund'
);

CREATE TABLE IF NOT EXISTS OPERATION_STATUS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPTION VARCHAR(255) NOT NULL
);

INSERT INTO OPERATION_STATUS (
    DESCRIPTION
) VALUES (
    'pending'
),
(
    'in_process'
),
(
    'approved'
),
(
    'rejected'
),
(
    'canceled'
);

CREATE TABLE IF NOT EXISTS OPERATION (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    TYPE_ID INT NOT NULL,
    STATUS_ID INT NOT NULL,
    CREATED_AT DATETIME NOT NULL,
    UPDATED_AT DATETIME NOT NULL,
    SHOPPING_CART_CODE NVARCHAR(255),
    CONSTRAINT OPERATION_TYPE_ID_STATUS_ID_FK FOREIGN KEY (TYPE_ID) REFERENCES OPERATION_TYPE (ID),
    CONSTRAINT OPERATION_STATUS_ID_STATUS_ID_FK FOREIGN KEY (STATUS_ID) REFERENCES OPERATION_STATUS (ID)
);

CREATE TABLE IF NOT EXISTS OPERATION_DETAIL (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    CREATED_AT DATETIME NOT NULL,
    OPERATION_ID BIGINT NOT NULL,
    PRODUCT_CODE VARCHAR(255) NOT NULL,
    QUANTITY INT NOT NULL,
    PRICE DECIMAL(10, 2) NOT NULL,
    CONSTRAINT OPERATION_DETAIL_OPERATION_ID_PRODUCT_ID_FK FOREIGN KEY (OPERATION_ID) REFERENCES OPERATION (ID)
);

CREATE TABLE IF NOT EXISTS OPERATION_TRANSITION (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    OPERATION_ID BIGINT NOT NULL,
    CREATED_AT DATETIME NOT NULL,
    FROM_STATUS_ID INT NOT NULL,
    TO_STATUS_ID INT NOT NULL,
    CONSTRAINT OPERATION_TRANSITION_OPERATION_ID_FROM_STATUS_ID_FK FOREIGN KEY (OPERATION_ID) REFERENCES OPERATION (ID),
    CONSTRAINT OPERATION_TRANSITION_FROM_STATUS_ID_TO_STATUS_ID_FK FOREIGN KEY (FROM_STATUS_ID) REFERENCES OPERATION_STATUS (ID),
    CONSTRAINT OPERATION_TRANSITION_TO_STATUS_ID_TO_STATUS_ID_FK FOREIGN KEY (TO_STATUS_ID) REFERENCES OPERATION_STATUS (ID)
);